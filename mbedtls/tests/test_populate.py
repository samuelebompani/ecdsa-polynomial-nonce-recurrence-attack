from populate import populate
import pytest

signatures_data = [
    ([], [], ([], [])),
    ([
        "3046022100B7D9ED351F82EBFEA2D7584B0733404AFBD2043093250FF6CA681AFE89B5B32A0221009F5061BBF4640CC9177D0DCCF30848F698367B9F0A3B7D74008A60ABDFA69DC9",
        "304502200457036709DDD23667ABB9E870797041FAE4BF6B690A8DC71B4C2D67A26726F0022100DAD318FBD374BD6A21ADE3AFBCD22005711048BCB8E7675C13BF0C071ADDCF44"
    ], [
        57004006673939934145591975114605949722813110540060845765423670244002893523596, 
        107865291548562097089322179101144521012866721496993258702963060162551320693665
    ], 
        ([83158294249874560363094736047011164713402796541257339415024030027458945594154,
          1962990572121394628678104845112500634453108399580403703450930405129754978032],
         [72059765226564649266173127814164578341165287917963358200395088787048078155209,
          98977178152948165738985072799549183231339756475941213953197767183933544189764])
    ),
    ([
        "304402202B79157E4B3F1B33E5D3A5C0363166944245144E49127B3520E079DCC3B192DF0220025A1982789D82A35CB855D9E6F0C8AB1F6F34A99ECBAC8747EB0F3F334543D9",
        "3046022100FC0429A6FEDA0AFE19D930DF999AE62CA125CFCC77FB7A60CD1EE82047EEAC68022100C1975157108AAB552F4F06D1C5AD45E7A8D97B3381D0027FF5B2A3C1E52BB5F5",
        "3045022100C73677AEAA458CC681D653ED383438AA91D95D642C673080FCE8A58C89FDB626022005BE22B56B66A55FF5571499F88CC83446633E73AC62961FA324F206D282577A",
        "3045022100C80A1634E9F5FD903E504805BDBB4A480451B40A4CB68CE3A424D82A6D77079E022047B60446590A2D47E40159485ADE45F5C01DFD7DB70E890D1C693FA7421DA370"
    ], [
        57004006673939934145591975114605949722813110540060845765423670244002893523596, 
        107865291548562097089322179101144521012866721496993258702963060162551320693665,
        23364480890832982244548852749001608058900926859450311226691505695384198366761,
        79473650602519471198349093233950523246571371293363996752841693077045454101784
        
    ], ([
        19663389325469584151766985100075548459413816963645563553140664451107185070815,
         113990192705032628314103127799176546818061540916185357650601008560225748167784,
         90106492626345732956035486683860021596244632620595593035728744623732529411622,
         90480391452276876175862778692309400864089523329562400857695285985163062216606], 
        [
        1063817994150594841575549804339753286930378569809223336498903135598586184665,
        87563735072063440962634803476312539407458889745590212531208779921697599632885,
        2597504735661003919787023441018301549158785518367067413075232225254143317882,
        32435807918760213868661891301240084358117664441552972593580938644192608756592
        ]))
]

hash_data = [[], []]

@pytest.mark.parametrize("signatures, _, __", signatures_data)
def test_lenghts(signatures, _, __):
    N = len(signatures)
    h, s, r, s_inv = populate(signatures, N)
    assert len(h) == len(s) == len(r) == len(s_inv) == N

@pytest.mark.parametrize("signatures, expected_hash, _", signatures_data)
def test_hash(signatures, expected_hash, _):
    N = len(signatures)
    h, _, _, _ = populate(signatures, N)
    assert h == expected_hash
    
@pytest.mark.parametrize("signatures, _, expected", signatures_data)
def test_s_r(signatures, _, expected):
    N = len(signatures)
    _, s, r, _ = populate(signatures, N)
    assert r == expected[0]
    assert s == expected[1]